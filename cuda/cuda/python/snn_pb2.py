# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: snn.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\tsnn.proto\x12\x03snn\"\xcc\x01\n\x0bInitRequest\x12\x11\n\tfile_path\x18\x01 \x01(\t\x12\x12\n\nroute_path\x18\x02 \x01(\t\x12\x0f\n\x07\x64\x65lta_t\x18\x03 \x01(\x02\x12\'\n\x04mode\x18\x04 \x01(\x0e\x32\x19.snn.InitRequest.CommMode\"\\\n\x08\x43ommMode\x12\x17\n\x13\x43OMM_POINT_TO_POINT\x10\x00\x12\x1c\n\x18\x43OMM_ROUTE_WITHOUT_MERGE\x10\x01\x12\x19\n\x15\x43OMM_ROUTE_WITH_MERGE\x10\x02\"5\n\x0cSubblockInfo\x12\x11\n\tsubblk_id\x18\x01 \x01(\x05\x12\x12\n\nsubblk_num\x18\x02 \x01(\x05\"\xc6\x01\n\x0cInitResponse\x12\x1e\n\x06status\x18\x01 \x01(\x0e\x32\x0e.snn.SnnStatus\x12\x10\n\x08\x62lock_id\x18\x02 \x01(\x05\x12\x19\n\x11neurons_per_block\x18\x03 \x01(\x05\x12&\n\x0bsubblk_info\x18\x04 \x03(\x0b\x32\x11.snn.SubblockInfo\x12\x14\n\x0cused_cpu_mem\x18\x05 \x01(\x01\x12\x15\n\rtotal_gpu_mem\x18\x06 \x01(\x01\x12\x14\n\x0cused_gpu_mem\x18\x07 \x01(\x01\"\x93\x02\n\nRunRequest\x12\x0c\n\x04iter\x18\x01 \x01(\x05\x12\x13\n\x0biter_offset\x18\x02 \x01(\x05\x12\x13\n\x0boutput_freq\x18\x03 \x01(\x08\x12\x14\n\x0coutput_vmean\x18\x04 \x01(\x08\x12\x15\n\routput_sample\x18\x05 \x01(\x08\x12*\n\x08strategy\x18\x06 \x01(\x0e\x32\x18.snn.RunRequest.Strategy\x12\x14\n\x0coutput_imean\x18\x07 \x01(\x08\"^\n\x08Strategy\x12\x1c\n\x18STRATEGY_SEND_SEQUENTIAL\x10\x00\x12\x1a\n\x16STRATEGY_SEND_PAIRWISE\x10\x01\x12\x18\n\x14STRATEGY_SEND_RANDOM\x10\x02\"\x85\x01\n\x0bRunResponse\x12\x1e\n\x06status\x18\x01 \x01(\x0e\x32\x0e.snn.SnnStatus\x12\x0c\n\x04\x66req\x18\x02 \x03(\x0c\x12\r\n\x05vmean\x18\x03 \x03(\x0c\x12\x14\n\x0csample_spike\x18\x04 \x03(\x0c\x12\x14\n\x0csample_vmemb\x18\x05 \x03(\x0c\x12\r\n\x05imean\x18\x06 \x03(\x0c\"\x0f\n\rMetricRequest\"\xa4\x02\n\nMetricInfo\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x1a\n\x12\x63omputing_duration\x18\x02 \x01(\x01\x12\x1a\n\x12reporting_duration\x18\x03 \x01(\x01\x12\x1b\n\x13\x64uration_inter_node\x18\x04 \x01(\x01\x12\x1b\n\x13\x64uration_intra_node\x18\x05 \x01(\x01\x12$\n\x1csending_byte_size_inter_node\x18\x06 \x01(\x04\x12$\n\x1csending_byte_size_intra_node\x18\x07 \x01(\x04\x12$\n\x1crecving_byte_size_inter_node\x18\x08 \x01(\x04\x12$\n\x1crecving_byte_size_intra_node\x18\t \x01(\x04\"Q\n\x0eMetricResponse\x12\x1e\n\x06status\x18\x01 \x01(\x0e\x32\x0e.snn.SnnStatus\x12\x1f\n\x06metric\x18\x02 \x03(\x0b\x32\x0f.snn.MetricInfo\"j\n\x11UpdatePropRequest\x12\x10\n\x08\x62lock_id\x18\x01 \x01(\x05\x12\x11\n\tneuron_id\x18\x02 \x03(\x05\x12\x1e\n\x07prop_id\x18\x03 \x03(\x0e\x32\r.snn.PropType\x12\x10\n\x08prop_val\x18\x04 \x03(\x02\"%\n\x12UpdatePropResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\"\x89\x01\n\x12UpdateGammaRequest\x12\x10\n\x08\x62lock_id\x18\x01 \x01(\x05\x12\x1e\n\x07prop_id\x18\x02 \x03(\x0e\x32\r.snn.PropType\x12\x10\n\x08\x62rain_id\x18\x03 \x03(\x05\x12\x1b\n\x13gamma_concentration\x18\x04 \x03(\x02\x12\x12\n\ngamma_rate\x18\x05 \x03(\x02\"&\n\x13UpdateGammaResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\"u\n\x1dUpdateGammaWithResultResponse\x12\x10\n\x08\x62lock_id\x18\x01 \x01(\x05\x12\x1e\n\x07prop_id\x18\x02 \x01(\x0e\x32\r.snn.PropType\x12\x10\n\x08\x62rain_id\x18\x03 \x01(\x05\x12\x10\n\x08prop_val\x18\x04 \x03(\x0c\"o\n\x16UpdateHyperParaRequest\x12\x10\n\x08\x62lock_id\x18\x01 \x01(\x05\x12\x1e\n\x07prop_id\x18\x02 \x03(\x0e\x32\r.snn.PropType\x12\x10\n\x08\x62rain_id\x18\x03 \x03(\x05\x12\x11\n\thpara_val\x18\x04 \x03(\x02\"*\n\x17UpdateHyperParaResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\";\n\x13UpdateSampleRequest\x12\x10\n\x08\x62lock_id\x18\x01 \x01(\x05\x12\x12\n\nsample_idx\x18\x02 \x03(\x05\"\'\n\x14UpdateSampleResponse\x12\x0f\n\x07success\x18\x01 \x01(\x08\"\x11\n\x0fShutdownRequest\"$\n\x10ShutdownResponse\x12\x10\n\x08shutdown\x18\x01 \x01(\x08*e\n\tSnnStatus\x12\n\n\x06SNN_OK\x10\x00\x12\x19\n\x15SNN_INVALID_PARAMETER\x10\x01\x12\x1c\n\x18SNN_UNSET_SAMPLE_FAILURE\x10\x02\x12\x13\n\x0fSNN_UNSUPPORTED\x10\x03*\xe6\x02\n\x08PropType\x12\x11\n\rEXT_STIMULI_I\x10\x00\x12\x0e\n\nMEMBRANE_C\x10\x01\x12\t\n\x05REF_T\x10\x02\x12\r\n\tLEAKAGE_G\x10\x03\x12\r\n\tLEAKAGE_V\x10\x04\x12\x0f\n\x0bTHRESHOLD_V\x10\x05\x12\x0b\n\x07RESET_V\x10\x06\x12\x12\n\x0e\x43ONDUCT_G_AMPA\x10\x07\x12\x12\n\x0e\x43ONDUCT_G_NMDA\x10\x08\x12\x13\n\x0f\x43ONDUCT_G_GABAa\x10\t\x12\x13\n\x0f\x43ONDUCT_G_GABAb\x10\n\x12\x13\n\x0fMEMBRANE_V_AMPA\x10\x0b\x12\x13\n\x0fMEMBRANE_V_NMDA\x10\x0c\x12\x14\n\x10MEMBRANE_V_GABAa\x10\r\x12\x14\n\x10MEMBRANE_V_GABAb\x10\x0e\x12\x0c\n\x08TAO_AMPA\x10\x0f\x12\x0c\n\x08TAO_NMDA\x10\x10\x12\r\n\tTAO_GABAa\x10\x11\x12\r\n\tTAO_GABAb\x10\x12\x12\x0e\n\nNOISE_RATE\x10\x13\x32\xd7\x04\n\x03Snn\x12/\n\x04Init\x12\x10.snn.InitRequest\x1a\x11.snn.InitResponse\"\x00\x30\x01\x12,\n\x03Run\x12\x0f.snn.RunRequest\x1a\x10.snn.RunResponse\"\x00\x30\x01\x12\x36\n\x07Measure\x12\x12.snn.MetricRequest\x1a\x13.snn.MetricResponse\"\x00\x30\x01\x12\x41\n\nUpdateprop\x12\x16.snn.UpdatePropRequest\x1a\x17.snn.UpdatePropResponse\"\x00(\x01\x12\x44\n\x0bUpdategamma\x12\x17.snn.UpdateGammaRequest\x1a\x18.snn.UpdateGammaResponse\"\x00(\x01\x12Z\n\x15Updategammawithresult\x12\x17.snn.UpdateGammaRequest\x1a\".snn.UpdateGammaWithResultResponse\"\x00(\x01\x30\x01\x12P\n\x0fUpdatehyperpara\x12\x1b.snn.UpdateHyperParaRequest\x1a\x1c.snn.UpdateHyperParaResponse\"\x00(\x01\x12G\n\x0cUpdatesample\x12\x18.snn.UpdateSampleRequest\x1a\x19.snn.UpdateSampleResponse\"\x00(\x01\x12\x39\n\x08Shutdown\x12\x14.snn.ShutdownRequest\x1a\x15.snn.ShutdownResponse\"\x00\x62\x06proto3')

_SNNSTATUS = DESCRIPTOR.enum_types_by_name['SnnStatus']
SnnStatus = enum_type_wrapper.EnumTypeWrapper(_SNNSTATUS)
_PROPTYPE = DESCRIPTOR.enum_types_by_name['PropType']
PropType = enum_type_wrapper.EnumTypeWrapper(_PROPTYPE)
SNN_OK = 0
SNN_INVALID_PARAMETER = 1
SNN_UNSET_SAMPLE_FAILURE = 2
SNN_UNSUPPORTED = 3
EXT_STIMULI_I = 0
MEMBRANE_C = 1
REF_T = 2
LEAKAGE_G = 3
LEAKAGE_V = 4
THRESHOLD_V = 5
RESET_V = 6
CONDUCT_G_AMPA = 7
CONDUCT_G_NMDA = 8
CONDUCT_G_GABAa = 9
CONDUCT_G_GABAb = 10
MEMBRANE_V_AMPA = 11
MEMBRANE_V_NMDA = 12
MEMBRANE_V_GABAa = 13
MEMBRANE_V_GABAb = 14
TAO_AMPA = 15
TAO_NMDA = 16
TAO_GABAa = 17
TAO_GABAb = 18
NOISE_RATE = 19


_INITREQUEST = DESCRIPTOR.message_types_by_name['InitRequest']
_SUBBLOCKINFO = DESCRIPTOR.message_types_by_name['SubblockInfo']
_INITRESPONSE = DESCRIPTOR.message_types_by_name['InitResponse']
_RUNREQUEST = DESCRIPTOR.message_types_by_name['RunRequest']
_RUNRESPONSE = DESCRIPTOR.message_types_by_name['RunResponse']
_METRICREQUEST = DESCRIPTOR.message_types_by_name['MetricRequest']
_METRICINFO = DESCRIPTOR.message_types_by_name['MetricInfo']
_METRICRESPONSE = DESCRIPTOR.message_types_by_name['MetricResponse']
_UPDATEPROPREQUEST = DESCRIPTOR.message_types_by_name['UpdatePropRequest']
_UPDATEPROPRESPONSE = DESCRIPTOR.message_types_by_name['UpdatePropResponse']
_UPDATEGAMMAREQUEST = DESCRIPTOR.message_types_by_name['UpdateGammaRequest']
_UPDATEGAMMARESPONSE = DESCRIPTOR.message_types_by_name['UpdateGammaResponse']
_UPDATEGAMMAWITHRESULTRESPONSE = DESCRIPTOR.message_types_by_name['UpdateGammaWithResultResponse']
_UPDATEHYPERPARAREQUEST = DESCRIPTOR.message_types_by_name['UpdateHyperParaRequest']
_UPDATEHYPERPARARESPONSE = DESCRIPTOR.message_types_by_name['UpdateHyperParaResponse']
_UPDATESAMPLEREQUEST = DESCRIPTOR.message_types_by_name['UpdateSampleRequest']
_UPDATESAMPLERESPONSE = DESCRIPTOR.message_types_by_name['UpdateSampleResponse']
_SHUTDOWNREQUEST = DESCRIPTOR.message_types_by_name['ShutdownRequest']
_SHUTDOWNRESPONSE = DESCRIPTOR.message_types_by_name['ShutdownResponse']
_INITREQUEST_COMMMODE = _INITREQUEST.enum_types_by_name['CommMode']
_RUNREQUEST_STRATEGY = _RUNREQUEST.enum_types_by_name['Strategy']
InitRequest = _reflection.GeneratedProtocolMessageType('InitRequest', (_message.Message,), {
  'DESCRIPTOR' : _INITREQUEST,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.InitRequest)
  })
_sym_db.RegisterMessage(InitRequest)

SubblockInfo = _reflection.GeneratedProtocolMessageType('SubblockInfo', (_message.Message,), {
  'DESCRIPTOR' : _SUBBLOCKINFO,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.SubblockInfo)
  })
_sym_db.RegisterMessage(SubblockInfo)

InitResponse = _reflection.GeneratedProtocolMessageType('InitResponse', (_message.Message,), {
  'DESCRIPTOR' : _INITRESPONSE,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.InitResponse)
  })
_sym_db.RegisterMessage(InitResponse)

RunRequest = _reflection.GeneratedProtocolMessageType('RunRequest', (_message.Message,), {
  'DESCRIPTOR' : _RUNREQUEST,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.RunRequest)
  })
_sym_db.RegisterMessage(RunRequest)

RunResponse = _reflection.GeneratedProtocolMessageType('RunResponse', (_message.Message,), {
  'DESCRIPTOR' : _RUNRESPONSE,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.RunResponse)
  })
_sym_db.RegisterMessage(RunResponse)

MetricRequest = _reflection.GeneratedProtocolMessageType('MetricRequest', (_message.Message,), {
  'DESCRIPTOR' : _METRICREQUEST,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.MetricRequest)
  })
_sym_db.RegisterMessage(MetricRequest)

MetricInfo = _reflection.GeneratedProtocolMessageType('MetricInfo', (_message.Message,), {
  'DESCRIPTOR' : _METRICINFO,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.MetricInfo)
  })
_sym_db.RegisterMessage(MetricInfo)

MetricResponse = _reflection.GeneratedProtocolMessageType('MetricResponse', (_message.Message,), {
  'DESCRIPTOR' : _METRICRESPONSE,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.MetricResponse)
  })
_sym_db.RegisterMessage(MetricResponse)

UpdatePropRequest = _reflection.GeneratedProtocolMessageType('UpdatePropRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEPROPREQUEST,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.UpdatePropRequest)
  })
_sym_db.RegisterMessage(UpdatePropRequest)

UpdatePropResponse = _reflection.GeneratedProtocolMessageType('UpdatePropResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEPROPRESPONSE,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.UpdatePropResponse)
  })
_sym_db.RegisterMessage(UpdatePropResponse)

UpdateGammaRequest = _reflection.GeneratedProtocolMessageType('UpdateGammaRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEGAMMAREQUEST,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.UpdateGammaRequest)
  })
_sym_db.RegisterMessage(UpdateGammaRequest)

UpdateGammaResponse = _reflection.GeneratedProtocolMessageType('UpdateGammaResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEGAMMARESPONSE,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.UpdateGammaResponse)
  })
_sym_db.RegisterMessage(UpdateGammaResponse)

UpdateGammaWithResultResponse = _reflection.GeneratedProtocolMessageType('UpdateGammaWithResultResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEGAMMAWITHRESULTRESPONSE,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.UpdateGammaWithResultResponse)
  })
_sym_db.RegisterMessage(UpdateGammaWithResultResponse)

UpdateHyperParaRequest = _reflection.GeneratedProtocolMessageType('UpdateHyperParaRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEHYPERPARAREQUEST,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.UpdateHyperParaRequest)
  })
_sym_db.RegisterMessage(UpdateHyperParaRequest)

UpdateHyperParaResponse = _reflection.GeneratedProtocolMessageType('UpdateHyperParaResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEHYPERPARARESPONSE,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.UpdateHyperParaResponse)
  })
_sym_db.RegisterMessage(UpdateHyperParaResponse)

UpdateSampleRequest = _reflection.GeneratedProtocolMessageType('UpdateSampleRequest', (_message.Message,), {
  'DESCRIPTOR' : _UPDATESAMPLEREQUEST,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.UpdateSampleRequest)
  })
_sym_db.RegisterMessage(UpdateSampleRequest)

UpdateSampleResponse = _reflection.GeneratedProtocolMessageType('UpdateSampleResponse', (_message.Message,), {
  'DESCRIPTOR' : _UPDATESAMPLERESPONSE,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.UpdateSampleResponse)
  })
_sym_db.RegisterMessage(UpdateSampleResponse)

ShutdownRequest = _reflection.GeneratedProtocolMessageType('ShutdownRequest', (_message.Message,), {
  'DESCRIPTOR' : _SHUTDOWNREQUEST,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.ShutdownRequest)
  })
_sym_db.RegisterMessage(ShutdownRequest)

ShutdownResponse = _reflection.GeneratedProtocolMessageType('ShutdownResponse', (_message.Message,), {
  'DESCRIPTOR' : _SHUTDOWNRESPONSE,
  '__module__' : 'snn_pb2'
  # @@protoc_insertion_point(class_scope:snn.ShutdownResponse)
  })
_sym_db.RegisterMessage(ShutdownResponse)

_SNN = DESCRIPTOR.services_by_name['Snn']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SNNSTATUS._serialized_start=2052
  _SNNSTATUS._serialized_end=2153
  _PROPTYPE._serialized_start=2156
  _PROPTYPE._serialized_end=2514
  _INITREQUEST._serialized_start=19
  _INITREQUEST._serialized_end=223
  _INITREQUEST_COMMMODE._serialized_start=131
  _INITREQUEST_COMMMODE._serialized_end=223
  _SUBBLOCKINFO._serialized_start=225
  _SUBBLOCKINFO._serialized_end=278
  _INITRESPONSE._serialized_start=281
  _INITRESPONSE._serialized_end=479
  _RUNREQUEST._serialized_start=482
  _RUNREQUEST._serialized_end=757
  _RUNREQUEST_STRATEGY._serialized_start=663
  _RUNREQUEST_STRATEGY._serialized_end=757
  _RUNRESPONSE._serialized_start=760
  _RUNRESPONSE._serialized_end=893
  _METRICREQUEST._serialized_start=895
  _METRICREQUEST._serialized_end=910
  _METRICINFO._serialized_start=913
  _METRICINFO._serialized_end=1205
  _METRICRESPONSE._serialized_start=1207
  _METRICRESPONSE._serialized_end=1288
  _UPDATEPROPREQUEST._serialized_start=1290
  _UPDATEPROPREQUEST._serialized_end=1396
  _UPDATEPROPRESPONSE._serialized_start=1398
  _UPDATEPROPRESPONSE._serialized_end=1435
  _UPDATEGAMMAREQUEST._serialized_start=1438
  _UPDATEGAMMAREQUEST._serialized_end=1575
  _UPDATEGAMMARESPONSE._serialized_start=1577
  _UPDATEGAMMARESPONSE._serialized_end=1615
  _UPDATEGAMMAWITHRESULTRESPONSE._serialized_start=1617
  _UPDATEGAMMAWITHRESULTRESPONSE._serialized_end=1734
  _UPDATEHYPERPARAREQUEST._serialized_start=1736
  _UPDATEHYPERPARAREQUEST._serialized_end=1847
  _UPDATEHYPERPARARESPONSE._serialized_start=1849
  _UPDATEHYPERPARARESPONSE._serialized_end=1891
  _UPDATESAMPLEREQUEST._serialized_start=1893
  _UPDATESAMPLEREQUEST._serialized_end=1952
  _UPDATESAMPLERESPONSE._serialized_start=1954
  _UPDATESAMPLERESPONSE._serialized_end=1993
  _SHUTDOWNREQUEST._serialized_start=1995
  _SHUTDOWNREQUEST._serialized_end=2012
  _SHUTDOWNRESPONSE._serialized_start=2014
  _SHUTDOWNRESPONSE._serialized_end=2050
  _SNN._serialized_start=2517
  _SNN._serialized_end=3116
# @@protoc_insertion_point(module_scope)
